name: Build and Test Application

on:
  push:
    branches:
      - feature/**
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:  # <- Aqui estava o erro de indentação
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build application
        run: mvn package

      - name: Build and test with Maven
        run: mvn clean verify

      - name: Report Test Coverage
        run: |
          sudo apt-get update
          sudo apt-get install -y xmlstarlet
          
          echo "Gerando Relatório de Cobertura de Testes :"
          COVERED=$(xmlstarlet sel -t -v "/report/counter[@type='LINE']/@covered" target/site/jacoco/jacoco.xml)
          MISSED=$(xmlstarlet sel -t -v "/report/counter[@type='LINE']/@missed" target/site/jacoco/jacoco.xml)
          
          TOTAL=$((COVERED + MISSED))
          if [ $TOTAL -eq 0 ]; then
            echo "Nenhum dado de teste encontrado."
          else
            COVERAGE=$(echo "scale=2; 100 * $COVERED / $TOTAL" | bc)
            echo "Cobertura de teste : $COVERAGE%"
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco

  deploy:
    name: Deploy na AWS
    runs-on: ubuntu-latest
    needs:
      - build
#    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cadastro
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster tech-grp14-cluster \
            --service cadastro-service \
            --force-new-deployment              
